<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.btsoft.jf.cloud.platform.security.mapper.IPermissionMapper">
	<resultMap id="sqlResultMap" type="com.btsoft.jf.cloud.platform.security.entity.PermissionEntity">
		<result column="app_code" property="appCode"/>
		<result column="enable_flag" property="enableFlag"/>
		<result column="create_by" property="createBy"/>
		<result column="create_date" property="createDate"/>
		<result column="last_update_by" property="lastUpdateBy"/>
		<result column="last_update_date" property="lastUpdateDate"/>

		<result column="permission_id" property="permissionId"/>
		<result column="permission_code" property="permissionCode"/>
		<result column="permission_desc_cn" property="permissionDescCn"/>
		<result column="permission_desc_en" property="permissionDescEn"/>
		<result column="permission_type" property="permissionType"/>
		<result column="permission_source" property="permissionSource"/>
		<result column="parent_code" property="parentCode"/>
		<result column="permission_sort" property="permissionSort"/>
	</resultMap>

	<sql id="base_sql">
		SELECT
			T.PERMISSION_ID,
			T.PERMISSION_CODE,
			T.PERMISSION_DESC_CN,
			T.PERMISSION_DESC_EN,
			T.PERMISSION_TYPE,
			T.PERMISSION_SOURCE,
		    T.PERMISSION_SORT,
			T.PARENT_CODE,
			T.APP_CODE,
			T.ENABLE_FLAG,
			T.CREATE_BY,
			T.CREATE_DATE,
			T.LAST_UPDATE_BY,
			T.LAST_UPDATE_DATE
		FROM SYS_PERMISSION_T T
	</sql>

	<sql id="base_condition">
		<trim prefix="where" prefixOverrides="and || or">
			T.APP_CODE=#{param.appCode,jdbcType=VARCHAR}
			<if test='param.enableFlag!=null and param.enableFlag!=""'>
				AND T.ENABLE_FLAG = #{param.enableFlag,jdbcType=VARCHAR}
			</if>
            <if test='param.permissionCode!=null and param.permissionCode!=""'>
                AND T.PERMISSION_CODE LIKE CONCAT('%',TRIM(#{param.permissionCode,jdbcType=VARCHAR}),'%')
            </if>
            <if test='param.permissionDescCN!=null and param.permissionDescCN!=""'>
                AND T.PERMISSION_DESC_CN LIKE CONCAT('%',TRIM(#{param.permissionDescCn,jdbcType=VARCHAR}),'%')
            </if>
            <if test='param.permissionDescEN!=null and param.permissionDescEN!=""'>
                AND T.PERMISSION_DESC_EN LIKE CONCAT('%',trim(#{param.permissionDescEn,jdbcType=VARCHAR}),'%')
            </if>
			<if test='param.permissionType!=null and param.permissionType!=""'>
				AND T.PERMISSION_TYPE #{param.permissionType,jdbcType=VARCHAR}
			</if>
		</trim>
	</sql>

	<insert id="createSingle">
		INSERT INTO SYS_PERMISSION_T (
			PERMISSION_CODE,
			PERMISSION_DESC_CN,
			PERMISSION_DESC_EN,
			PERMISSION_TYPE,
			PERMISSION_SOURCE,
			PERMISSION_SORT,
		    PARENT_CODE,
			APP_CODE,
			CREATE_BY,
			LAST_UPDATE_BY
		)VALUES(
			#{param.permissionCode,jdbcType=VARCHAR},
			#{param.permissionDescCn,jdbcType=VARCHAR},
			#{param.permissionDescEn,jdbcType=VARCHAR},
			#{param.permissionType,jdbcType=VARCHAR},
			#{param.permissionSource,jdbcType=VARCHAR},
			IFNULL(#{param.permissionSort,jdbcType=NUMERIC},0),
			IFNULL(#{param.parentCode,jdbcType=VARCHAR},''),
			#{param.appCode,jdbcType=VARCHAR},
			#{param.currentUserId,jdbcType=NUMERIC},
			#{param.currentUserId,jdbcType=NUMERIC}
		)
	</insert>

    <select id="findSingleById" resultMap="sqlResultMap">
        <include refid="base_sql"/>
        WHERE T.PERMISSION_ID=#{id,jdbcType=NUMERIC}
    </select>

	<delete id="deleteSingleById">
		DELETE FROM SYS_PERMISSION_T WHERE PERMISSION_ID=#{id,jdbcType=NUMERIC}
	</delete>

	<update id="updateSingle">
		UPDATE SYS_PERMISSION_T T SET
			T.PERMISSION_CODE=#{param.permissionCode,jdbcType=VARCHAR},
			T.PERMISSION_DESC_CN=#{param.permissionDescCn,jdbcType=VARCHAR},
			T.PERMISSION_DESC_EN=#{param.permissionDescEn,jdbcType=VARCHAR},
			T.PERMISSION_TYPE=#{param.permissionType,jdbcType=VARCHAR},
			T.PERMISSION_SORT=IFNULL(#{param.permissionSort,jdbcType=NUMERIC},0),
			T.PARENT_CODE=IFNULL(#{param.parentCode,jdbcType=VARCHAR},''),
			T.LAST_UPDATE_BY=#{param.currentUserId,jdbcType=NUMERIC},
			T.LAST_UPDATE_DATE=NOW()
		where t.permission_id=#{param.permissionId,jdbcType=NUMERIC}
	</update>

	<select id="findList" resultMap="sqlResultMap">
		<include refid="base_sql"/>
		<include refid="base_condition"/>
		ORDER BY T.PERMISSION_SORT ASC
	</select>

	<insert id="createMultiple">
		INSERT INTO SYS_PERMISSION_T (
			PERMISSION_CODE,
			PERMISSION_DESC_CN,
			PERMISSION_DESC_EN,
			PERMISSION_TYPE,
			PARENT_CODE,
			PERMISSION_SOURCE,
			PERMISSION_SORT,
			APP_CODE,
		    APP_SOURCE,
			CREATE_BY,
			LAST_UPDATE_BY
		)
		VALUES
		<foreach collection="param.list" item="item" separator=",">
			(#{item.permissionCode,jdbcType=VARCHAR},
			#{item.permissionDescCn,jdbcType=VARCHAR},
			#{item.permissionDescEn,jdbcType=VARCHAR},
			#{item.permissionType,jdbcType=VARCHAR},
			IFNULL(#{item.parentCode,jdbcType=VARCHAR},''),
			#{item.permissionSource,jdbcType=VARCHAR},
			IFNULL(#{item.permissionSort,jdbcType=NUMERIC},0),
			#{item.appCode,jdbcType=VARCHAR},
			#{param.appCode,jdbcType=VARCHAR},
			#{item.currentUserId,jdbcType=NUMERIC},
			#{item.currentUserId,jdbcType=NUMERIC})
		</foreach>
		ON DUPLICATE KEY UPDATE
			PERMISSION_DESC_CN=VALUES(PERMISSION_DESC_CN),
			PERMISSION_DESC_EN=VALUES(PERMISSION_DESC_EN),
			PERMISSION_SOURCE =VALUES(PERMISSION_SOURCE),
			PERMISSION_SORT =VALUES(PERMISSION_SORT),
		    ENABLE_FLAG='Y',
			LAST_UPDATE_BY=VALUES(LAST_UPDATE_BY),
			LAST_UPDATE_DATE=NOW()
	</insert>

	<update id="inValidPermission">
		UPDATE SYS_PERMISSION_T T SET
			T.ENABLE_FLAG='N',
			T.LAST_UPDATE_BY=#{param.currentUserId,jdbcType=NUMERIC},
			T.LAST_UPDATE_DATE=NOW()
		WHERE T.APP_SOURCE=#{param.appCode,jdbcType=VARCHAR}
		  AND T.PERMISSION_SOURCE='annotation'
		<if test="param.list!=null and param.list.size()>0">
			<foreach collection="param.list" item="item" open="AND (T.PERMISSION_CODE,T.PERMISSION_TYPE,T.PARENT_CODE) NOT IN(" close=")" separator=",">
				(#{item.permissionCode,jdbcType=NUMERIC},#{item.permissionType,jdbcType=NUMERIC},IFNULL(#{item.parentCode,jdbcType=VARCHAR},''))
			</foreach>
		</if>
	</update>

	<select id="findPermissionCodeList" resultType="string">
		SELECT CONCAT(T.PARENT_CODE,'$',T.PERMISSION_CODE) FROM SYS_PERMISSION_T T
		WHERE T.ENABLE_FLAG='Y'
		  AND T.PERMISSION_TYPE='method'
		<if test="roleIds!=null and roleIds.size()>0">
		    AND EXISTS(
		    	SELECT 1 FROM SYS_ROLE_PERMISSION_RT RP
		    		WHERE RP.ENABLE_FLAG='Y'
		    		  AND RP.PERMISSION_ID=T.PERMISSION_ID
				<foreach collection="roleIds" item="item" open="AND RP.ROLE_ID IN(" close=")" separator=",">
					#{item,jdbcType=NUMERIC}
				</foreach>
			)
		</if>
		<if test="roleIds==null or roleIds.isEmpty()">
			AND 1=2
		</if>
	</select>
</mapper>