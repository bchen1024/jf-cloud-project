<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.btsoft.jf.cloud.platform.account.mapper.IEmployeeMapper">
	<resultMap id="sqlResultMap" type="com.btsoft.jf.cloud.platform.account.entity.EmployeeEntity">
		<result column="ENABLE_FLAG" property="enableFlag"/>
		<result column="CREATE_BY" property="createBy"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="LAST_UPDATE_BY" property="lastUpdateBy"/>
		<result column="LAST_UPDATE_DATE" property="lastUpdateDate"/>

		<result column="USER_ID" property="userId"/>
		<result column="EMPLOYEE_NO" property="employeeNo"/>
		<result column="EMPLOYEE_TYPE" property="employeeType"/>
		<result column="EMPLOYEE_STATUS" property="employeeStatus"/>
		<result column="EMPLOYEE_JOB" property="employeeJob"/>
		<result column="PARENT_ID" property="parentId"/>
		<result column="ENTRY_DATE" property="entryDate"/>
		<result column="EMPLOYEE_ORG" property="employeeOrg"/>
	</resultMap>

	<sql id="base_sql">
		SELECT
			T.USER_ID,
			T.EMPLOYEE_NO,
		    T.EMPLOYEE_TYPE,
		    T.EMPLOYEE_STATUS,
		    T.EMPLOYEE_JOB,
		    T.PARENT_ID,
			T.ENTRY_DATE,
		    T.EMPLOYEE_ORG,
			T.ENABLE_FLAG,
			T.CREATE_BY,
			T.CREATE_DATE,
			T.LAST_UPDATE_BY,
			T.LAST_UPDATE_DATE
		FROM SYS_EMPLOYEE_T T
	</sql>

	<sql id="base_condition">
		<trim prefix="WHERE" prefixOverrides="AND || OR">
		    T.ENABLE_FLAG='Y'
			<if test='param.employeeType!=null'>
				AND T.EMPLOYEE_TYPE=#{param.employeeType,jdbcType=NUMERIC}
			</if>
			<if test='param.employeeStatus!=null'>
				AND T.EMPLOYEE_STATUS=#{param.employeeStatus,jdbcType=NUMERIC}
			</if>
			<if test='param.employeeOrg!=null'>
				AND EXISTS(
					SELECT 1
					FROM
					(
						SELECT T2.ORG_ID
							FROM BASIC_ORGANIZATION_T T1,
								 BASIC_ORGANIZATION_T T2
							WHERE T1.ORG_ID = T2.PARENT_ID
						AND (T1.ORG_ID = #{param.employeeOrg,jdbcType=NUMERIC} OR T1.PARENT_ID = #{param.employeeOrg,jdbcType=NUMERIC})
						UNION
						SELECT T3.ORG_ID
							FROM BASIC_ORGANIZATION_T T3
							WHERE T3.ORG_ID = #{param.employeeOrg,jdbcType=NUMERIC}
					) TT WHERE TT.ORG_ID=T.EMPLOYEE_ORG
				)
			</if>
		</trim>
	</sql>

	<insert id="createSingle">
		INSERT INTO SYS_EMPLOYEE_T (
			USER_ID,
		    EMPLOYEE_TYPE,
		    EMPLOYEE_STATUS,
			EMPLOYEE_JOB,
		    PARENT_ID,
			ENTRY_DATE,
			EMPLOYEE_ORG,
			CREATE_BY,
			LAST_UPDATE_BY
		)VALUES(
			#{param.userId,jdbcType=NUMERIC},
			#{param.employeeType,jdbcType=NUMERIC},
			#{param.employeeStatus,jdbcType=NUMERIC},
			#{param.employeeJob,jdbcType=NUMERIC},
			#{param.parentId,jdbcType=NUMERIC},
			#{param.entryDate},
			#{param.employeeOrg,jdbcType=NUMERIC},
			#{param.currentUserId,jdbcType=NUMERIC},
			#{param.currentUserId,jdbcType=NUMERIC}
		)
	</insert>

    <select id="findSingleById" resultMap="sqlResultMap">
        <include refid="base_sql"/>
        WHERE T.USER_ID=#{id,jdbcType=NUMERIC}
		  AND T.ENABLE_FLAG='Y'
    </select>

	<select id="findList" resultMap="sqlResultMap">
		<include refid="base_sql"/>
		<include refid="base_condition"/>
	</select>
	<select id="findEmployeeList" resultMap="sqlResultMap">
		<include refid="base_sql"/>
		<include refid="base_condition"/>
		<if test='param.keywordField!=null and param.keywordField!="" and
				param.keywordValue!=null and param.keywordValue!="" '>
			<if test='param.keywordField=="userName"'>
				AND EXISTS(
				SELECT 1 FROM SYS_USER_T U WHERE U.USER_ID=T.USER_ID
				AND (U.USER_CN LIKE CONCAT('%',TRIM(#{param.keywordValue,jdbcType=VARCHAR}),'%')
				OR U.USER_EN LIKE CONCAT('%',TRIM(#{param.keywordValue,jdbcType=VARCHAR}),'%'))
				)
			</if>
		</if>
	</select>

	<update id="updateSingle">
		UPDATE SYS_EMPLOYEE_T T SET
			T.EMPLOYEE_TYPE=#{param.employeeType,jdbcType=NUMERIC},
			T.EMPLOYEE_STATUS=#{param.employeeStatus,jdbcType=NUMERIC},
			T.EMPLOYEE_JOB=#{param.employeeJob,jdbcType=NUMERIC},
			T.PARENT_ID=#{param.parentId,jdbcType=NUMERIC},
			T.EMPLOYEE_ORG=#{param.employeeOrg,jdbcType=NUMERIC},
			T.ENTRY_DATE=#{param.entryDate},
			T.LAST_UPDATE_BY=#{param.currentUserId,jdbcType=NUMERIC},
			T.LAST_UPDATE_DATE=NOW()
		WHERE T.USER_ID=#{param.userId,jdbcType=NUMERIC}
	</update>

	<update id="deleteEmployeeOrg">
		UPDATE SYS_EMPLOYEE_T T SET
			T.EMPLOYEE_ORG=NULL,
			T.LAST_UPDATE_BY=#{currentUserId,jdbcType=NUMERIC},
			T.LAST_UPDATE_DATE=NOW()
		WHERE T.EMPLOYEE_ORG=#{orgId,jdbcType=NUMERIC}
	</update>
</mapper>